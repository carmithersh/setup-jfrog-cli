name: "Test-with-sonar"
on: [push]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    env:
      JF_ENV_LOCAL: eyJ2ZXJzaW9uIjoxLCJ1cmwiOiJodHRwOi8vMTI3LjAuMC4xOjgwODEvYXJ0aWZhY3RvcnkvIiwidXNlciI6ImFkbWluIiwicGFzc3dvcmQiOiJBUEI3REVaUlBpSHFIRFRRb2tMa3g5aGh6S1QiLCJzZXJ2ZXJJZCI6ImxvY2FsIn0=

    strategy:
      matrix:
        os: [ubuntu-latest]
        version: ["", "latest", "1.46.4"]
      fail-fast: false
    steps:
      # Checkout and install prerequisites
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      # Run action according to the input version
      - name: Setup JFrog CLI
        if: matrix.version != ''
        uses: ./
        with:
          version: ${{ matrix.version }}
      - name: Setup default JFrog CLI
        if: matrix.version == ''
        uses: ./

      # Run --version
      - name: Check versions
        run: jf --version && jfrog --version

      # Check local server successfully configured
      - name: Sanity
        run: jf c show local || jfrog rt config show local

      # Check build URL
      - name: Check build URL
        uses: wei/curl@master
        with:
          args: -I ${JFROG_CLI_BUILD_URL}
        if: runner.os == 'Linux'

      # Check environment variables
      - name: Check action environment
        run: node scripts/check-env.js

      # Install and run tests
      - name: Install
        run: npm i
      - name: Unit tests
        run: npm t
      - name: Install SonarQube Scanner
        run: |          
          curl -sL  -sSLo sonar-scanner.zip  https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-6.2.1.4610.zip
          unzip sonar-scanner.zip
          export PATH=$PATH:$PWD/sonar-scanner-6.2.1.4610/bin
          pwd
          ls -l $PWD/sonar-scanner-6.2.1.4610/bin/
          echo "$PWD/sonar-scanner-6.2.1.4610/bin"
      - name: Run SonarScanner
        id: run-sonar-scanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          $PWD/sonar-scanner-6.2.1.4610/bin/sonar-scanner \
            -Dsonar.projectKey=setup-jfrog-cli \
            -Dsonar.organization=my-evidence-test-org1 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.java.jdkHome=$JAVA_HOME \
            -Dsonar.verbose=true \
            -Dsonar.token=$SONAR_TOKEN
